plugins {
    id 'biz.aQute.bnd.builder' version '5.3.0' apply false
    
    id 'jacoco'
    id 'maven-publish'
}

version = '0.15.0'

task clean {
   // make sure the build directory is gone 
   doFirst {
      delete "${buildDir}"
   }
}

// A configuration to publish the merge exec into
configurations {
    archives
}

//  Get all the sub projects with jacoco plugin to add itself to the merge 
subprojects {
   plugins.withId('jacoco')  {
        rootProject.tasks.named('jacocoMerge').get().executionData(tasks.named('test').get())
   }
}

// Define the artifact
def execFile = layout.buildDirectory.file('jacoco/jacocoMerge.exec')
def execArtifact = artifacts.add('archives', execFile.get().asFile) {
    builtBy 'jacocoMerge'
}


task jacocoMerge(type: JacocoMerge) {
    doFirst {
        // go through all the files and remove the ones that do not exist.   some managers do not have unit tests yet
        executionData = executionData.filter({f -> f.exists()})
    }

    enabled = jacocoEnabled.toBoolean()
}

repositories {
    maven {
        url "$sourceMaven"
    }
    maven {
        url "$centralMaven"
    }
}

if (jacocoEnabled.toBoolean()) {
publishing {
    publications {
        maven(MavenPublication) {
            artifact execArtifact
            
            groupId = 'codecoverage'
            artifactId = 'manager-unit-tests'
       }
    }
    repositories {
        maven {
            url  = "$targetMaven"
            
            if ("$targetMaven".startsWith('http')) {
                credentials {
                    username System.getenv('MAVENUSERNAME')
                    password System.getenv('MAVENPASSWORD')
                }
            }
        }
    }
}
}