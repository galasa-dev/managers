name: Main build

on:
  workflow_dispatch:
    inputs:
      jacocoEnabled:
        description: 'Enable Jacoco code coverage (set to "false" for release builds)'
        required: true
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'
      isMainOrRelease:
        description: 'This build is for the main branch or a release (set to "false" for development branch builds)'
        required: true
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  NAMESPACE: galasa-dev
  BRANCH: ${{ github.ref_name }}
  ARGO_APP_BRANCH: gh # TODO: remove this parameter and just use env.BRANCH once we update development.galasa.dev/main with these workflows.

jobs:
  log-github-ref:
    name: Log the GitHub ref this workflow is running on (Branch or tag that received dispatch)
    runs-on: ubuntu-latest
    steps:
      - name: Log GitHub ref of workflow
        run: |
          echo "This workflow is running on GitHub ref ${{ env.BRANCH }}"

  build-managers:
    name: Build Managers source code and Docker image for development Maven registry
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Setup JDK 
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'semeru'

      - name: Print githash
        run: |
          echo $GITHUB_SHA > ./managers.githash

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.9

      - name: Build Managers source code
        if: github.event_name == 'push'
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_signingKeyId:  ${{ secrets.GPG_KEYID }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          set -o pipefail
          gradle -b galasa-managers-parent/build.gradle check publish --info \
          -Dorg.gradle.jvmargs=-Xmx4096M \
          -PsourceMaven=https://development.galasa.dev/${{ env.ARGO_APP_BRANCH }}/maven-repo/extensions \
          -PcentralMaven=https://repo.maven.apache.org/maven2/ \
          -PtargetMaven=${{github.workspace}}/repo \
          -PjacocoEnabled=true \
          -PisMainOrRelease=true 2>&1 | tee build.log

      - name: Build Managers source code
        if: github.event_name == 'workflow_dispatch' # Use the input values provided by the workflow dispatch.
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_signingKeyId:  ${{ secrets.GPG_KEYID }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          set -o pipefail
          gradle -b galasa-managers-parent/build.gradle check publish --info \
          -Dorg.gradle.jvmargs=-Xmx4096M \
          -PsourceMaven=https://development.galasa.dev/${{ env.ARGO_APP_BRANCH }}/maven-repo/extensions \
          -PcentralMaven=https://repo.maven.apache.org/maven2/ \
          -PtargetMaven=${{github.workspace}}/repo \
          -PjacocoEnabled=${{ inputs.jacocoEnabled }} \
          -PisMainOrRelease=${{ inputs.isMainOrRelease }} 2>&1 | tee build.log
      
      - name: Upload Gradle Build Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-build-log
          path: build.log
        
      - name: Upload Jacoco Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: ${{github.workspace}}/galasa-managers-parent/build/reports/jacoco/jacocoMerge

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Extract metadata for Managers image
        id: metadata
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/managers-maven-artefacts

      - name: Build Managers image for development Maven registry
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockerfiles/dockerfile
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            dockerRepository=ghcr.io
            tag=${{ env.BRANCH }}

      - name: Recycle application in ArgoCD
        env: 
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
        run: |
          docker run --env ARGOCD_AUTH_TOKEN=${{ env.ARGOCD_AUTH_TOKEN }} --rm -v ${{ github.workspace }}:/var/workspace ghcr.io/galasa-dev/argocdcli:main app actions run ${{ env.ARGO_APP_BRANCH }}-maven-repos restart --kind Deployment --resource-name managers-${{ env.ARGO_APP_BRANCH }} --server argocd.galasa.dev

      - name: Wait for app health in ArgoCD
        env: 
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
        run: |
          docker run --env ARGOCD_AUTH_TOKEN=${{ env.ARGOCD_AUTH_TOKEN }} --rm -v ${{ github.workspace }}:/var/workspace ghcr.io/galasa-dev/argocdcli:main app wait ${{ env.ARGO_APP_BRANCH }}-maven-repos --resource apps:Deployment:managers-${{ env.ARGO_APP_BRANCH }} --health --server argocd.galasa.dev

  trigger-obr-workflow:
    name: Trigger OBR workflow
    runs-on: ubuntu-latest
    needs: build-managers

    steps:
      - name: Trigger OBR workflow dispatch event with GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GALASA_TEAM_GITHUB_TOKEN }}
        run: |
          gh workflow run build.yaml --repo https://github.com/galasa-dev/obr --ref ${{ env.BRANCH }}